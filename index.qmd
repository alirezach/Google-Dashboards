---
title: "Google Government Removal Requests"
logo: https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Google_2015_logo.svg/250px-Google_2015_logo.svg.png
format: 
  dashboard:
    nav-buttons:
      - text: Home
        icon: house
        href: https://alirezach.github.io/
      - text: Persian Blog
        href: https://alirezach.github.io/persian
      - icon: linkedin
        href: https://www.linkedin.com/in/alirezachamanzar/
      - icon: github
        href: https://github.com/alirezach
theme:
  light: Sketchy
  dark: Cyborg
execute: 
  echo: false
  warning: false
editor_options: 
  chunk_output_type: console
footer: "Made By R and Quarto: Alireza Chamanzar"
---

```{r setup, include = FALSE}
library(tidyverse)
library(dplyr)
library(crosstalk)
library(palmerpenguins)
library(plotly)
library(ggforce)
library(DT)
library(htmlwidgets)
library(htmltools)
library(MovingBubbles)
data <- read_csv("google-government-detailed-removal-requests-historical.csv")
data <- data %>% 
  janitor::clean_names() %>% 
  mutate(product = gsub("ответы", "Answers", product))
```

```{r load_data}
top_countries <- data %>% 
  group_by(country_region) %>% 
  summarise(all =sum(court_orders, executive_police_etc, items_requested_to_be_removed, na.rm = T)) %>% 
  arrange(desc(all)) %>% 
  head(20) %>% 
  mutate(country_region=factor(country_region, country_region))
plot_top_countries <-   ggplot(top_countries, aes(country_region, all))+
  geom_segment(aes(x=country_region, xend = country_region, y=0, yend= all), color="grey")+
  geom_point(size=3, color="#4C97FF")+
  geom_text(aes(label = scales::comma(all)), hjust = -0.2, vjust = 0.5, size = 3, color = "black")+
  coord_cartesian(clip = "off")+
  coord_flip()+
  theme_classic()+
  theme(plot.margin = margin(25,25,10,25),
        plot.title.position = 'plot',
        panel.grid.minor.y = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position="none",
        axis.title.x = element_blank(), 
        axis.title.y = element_blank())+
  scale_y_continuous(labels = scales::comma, limits = c(0, 600000)) +
  labs(title = "",
       subtitle = "  between 2009~2019")

all_request <- sum(top_countries$all)
country_count <- n_distinct(data$country_region)

```

# Start

## row first {height="17%"}

### column {width= 60%}

**What is a content removal request?** Governments make content removal requests to remove information from Google products, such as blog posts or YouTube videos. The data includes court orders sent to us to remove content, regardless of whether the court order is directed at Google. you can find more information and download data at [Google](https://transparencyreport.google.com/government-removals/overview?hl=en).

## row two {height= 83%}

## column charts

### column top countries {width:50%}

```{r}
#| padding: 0px
#| title: "Countries with the most requests"
plot_top_countries
```

### column {.tabset}

#### All Request by Products

```{r warning=F}
#| padding: 0px

product_request <- data %>% 
  group_by(product) %>% 
  summarise(n= n()) %>%
  arrange(desc(n)) %>% 
  ungroup()
    
plot_ly(product_request, 
        x = ~product, 
        y = ~n, 
        size = ~n, 
        type = 'scatter', 
        mode = 'markers', 
        color = ~product,
        colors = 'Paired',
        marker = list(opacity = 0.6, sizemode = 'diameter'),
        hoverinfo = 'text',
        text = ~paste(product, ':', n)) %>% 
  layout(xaxis= list(showgrid = FALSE,
                     categoryorder= "mean ascending",
                     showline=F,
                     title = F,
                     visible=F),
         yaxis = list(showgrid = FALSE,
                      separatethousands=T,
                      title = F,
                      visible=F),
         showlegend = FALSE,
         margin.t= 150)

```

#### All Request by Reason

```{r warning=F}
#| padding: 0px

reason_request <- data %>%
  group_by(reason) %>% 
  summarise(n= n()) %>%
  arrange(desc(n)) %>% 
  ungroup()

is_large_slice <- function(n) {
  n > 380
}

reason_request <- reason_request %>%
  mutate(show_label = ifelse(is_large_slice(n), reason, ""))

plot_ly(reason_request,
        labels = ~reason,
        values = ~n,
        type = "pie",
        text = ~show_label,
        textinfo='text+percent',
        hoverinfo='label+value+percent',
        insidetextorientation='radial') %>% 
  layout(xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
         showlegend=F)
 

```

# Country profile

```{r setup2 }
country_profile <- data %>% 
  group_by(country_region, product) %>% 
  summarise(n=n()) %>% 
  ungroup()

country_profile_reason <- data %>% 
  group_by(country_region, reason) %>% 
  summarise(n=n()) %>% 
  ungroup()

shared_country_profile <- SharedData$new(country_profile, ~country_region, group = "Choose")
shared_country_profile_reason  <- SharedData$new(country_profile_reason, ~country_region, group = "Choose")

country_filter <- filter_select(
  id = "country_filter",
  label = "Select Country",
  sharedData = shared_country_profile,
  group = ~country_region,
  allLevels = TRUE
)


product_plot <- shared_country_profile %>% 
  plot_ly(y=~product, x = ~n) %>%  
  add_bars(type="bar")

reason_plot <- shared_country_profile_reason  %>%
  plot_ly(y=~reason, x = ~n) %>% 
  group_by(country_region)%>%
  add_bars(type="bar")
```

##  {.sidebar}

```{r filter_list}
#| title: "Choose Countrey"
#| padding: 4px
bscols(country_filter)
```

## Row

### Row timeline {height="30%"}

```{r warning=F}
library(dygraphs)
time_series <- data %>% 
  group_by(period_ending) %>% 
  summarize(all=sum(court_orders, executive_police_etc, items_requested_to_be_removed, na.rm = T))
            
dygraph(time_series, main = "All request in years" )


```

### Row timeline {height="70%"}

#### column

```{r}
#| title: "Request By product"
bscols(product_plot)
```

#### column

```{r}
#| title: "Request By Reason"
#| padding: 0px
bscols(reason_plot)
```

# Data

```{r}
#| title: "Dataset"
#| fig-cap: Data By Google
datatable(data, filter = "top")
```

# about

## Row

### column {width: 30%}

Made by **R**, **Quarto**, plotlly, Tidyvers and other friends.

### column {width: 70%}

```{r echo=F}
#| title: "Remove requst in time"
#| padding: 0px
bubbles <- data %>% 
  group_by(period_ending,product) %>% 
  summarize(n=n())

colordf <- data.frame(key = unique(product_request$product), color = terrain.colors(55))
MovingBubbles(bubbles,key="product", value= "n", frame = "period_ending", color = colordf, elementId = "none")
```
